FROM nvidia/cuda:10.2-runtime-ubuntu18.04 as base
FROM nvidia/cuda:10.2-runtime-ubuntu18.04 as cuda10

# FROM cuda10 AS CONDA 
# Installing and setting up miniconda
# RUN curl -sSLO https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-x86_64.sh && \
#    bash Miniconda3-py38_4.10.3-Linux-x86_64.sh -b -p /usr/local/miniconda && \
#    rm Miniconda3-py38_4.10.3-Linux-x86_64.sh


######################################################################################
######################## The final image #########
###

FROM cuda10

## FSL
COPY --from=pennbbl/qsiprep-fsl:22.1.0 /opt/fsl-6.0.5.1 /opt/fsl-6.0.5.1

## ANTs
COPY --from=pennbbl/qsiprep-ants:22.1.0 /opt/ants /opt/ants
#ENV ANTSPATH="/opt/ants/bin" \
#    PATH="/opt/ants/bin:$PATH" \
#    LD_LIBRARY_PATH="/opt/ants/lib:$LD_LIBRARY_PATH"

#RUN apt-get update \
#    && apt install -y --no-install-recommends zlib1g-dev \
#    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

## DSI Studio
COPY --from=pennbbl/qsiprep-dsistudio:22.1.0 /opt/dsi-studio /opt/dsi-studio
# deps qt512base qt512charts-no-lgpl

## FreeSurfer
#COPY --from=FREESURFER /opt/freesurfer /opt/freesurfer

## MRtrix3
COPY --from=pennbbl/qsiprep-mrtrix3:22.1.0 /opt/mrtrix3-latest /opt/mrtrix3-latest


## MRtrix3-3Tissue
COPY --from=pennbbl/qsiprep-3tissue:22.1.0 /opt/3Tissue /opt/3Tissue

## Freesurfer
COPY --from=pennbbl/qsiprep-freesurfer:22.1.0 /opt/freesurfer /opt/freesurfer

# ENV C3DPATH="/opt/convert3d-nightly" \
#     PATH="/opt/convert3d-nightly/bin:$PATH"
# RUN echo "Downloading Convert3D ..." \
#     && mkdir -p /opt/convert3d-nightly \
#     && curl -fsSL --retry 5 https://sourceforge.net/projects/c3d/files/c3d/Nightly/c3d-nightly-Linux-x86_64.tar.gz/download \
#     | tar -xz -C /opt/convert3d-nightly --strip-components 1

# # Install latest pandoc
# RUN curl -o pandoc-2.2.2.1-1-amd64.deb -sSL "https://github.com/jgm/pandoc/releases/download/2.2.2.1/pandoc-2.2.2.1-1-amd64.deb" && \
#     dpkg -i pandoc-2.2.2.1-1-amd64.deb && \
#     rm pandoc-2.2.2.1-1-amd64.deb

# # Installing SVGO
# RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
# RUN apt-get install -y nodejs
# RUN npm install -g svgo

# # Installing bids-validator
# RUN npm install -g bids-validator@1.2.3

# # Installing AFNI
# RUN curl -sSL "http://neuro.debian.net/lists/$( lsb_release -c | cut -f2 ).us-ca.full" >> /etc/apt/sources.list.d/neurodebian.sources.list && \
#     apt-key add /usr/local/etc/neurodebian.gpg && \
#     (apt-key adv --refresh-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9 || true)

# RUN apt-get update && \
#     apt-get install -y --no-install-recommends \
#                     afni=16.2.07~dfsg.1-5~nd16.04+1 \
#                     git-annex-standalone && \
#     apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# # Unless otherwise specified each process should only use one thread - nipype
# # will handle parallelization
# ENV MKL_NUM_THREADS=1 \
#     OMP_NUM_THREADS=1 \
#     MRTRIX_NTHREADS=1 \
#     KMP_WARNINGS=0

# # Create a shared $HOME directory
# RUN useradd -m -s /bin/bash -G users qsiprep
# WORKDIR /home/qsiprep
# ENV HOME="/home/qsiprep"

# # Precaching atlases
# WORKDIR /root/
# ENV CRN_SHARED_DATA /niworkflows_data
# ADD docker/scripts/get_templates.sh get_templates.sh
# RUN mkdir $CRN_SHARED_DATA && \
#     /root/get_templates.sh && \
#     chmod -R a+rX $CRN_SHARED_DATA

# RUN ln -s /opt/fsl-6.0.5.1/bin/eddy_cuda10.2 /opt/fsl-6.0.5.1/bin/eddy_cuda


# ENV ANTSPATH="/opt/ants-latest/bin" \
#     LD_LIBRARY_PATH="/opt/ants-latest/lib:$LD_LIBRARY_PATH" \
#     AFNI_INSTALLDIR=/usr/lib/afni \
#     PATH=${PATH}:/usr/lib/afni/bin \
#     AFNI_PLUGINPATH=/usr/lib/afni/plugins \
#     AFNI_MODELPATH=/usr/lib/afni/models \
#     AFNI_TTATLAS_DATASET=/usr/share/afni/atlases \
#     AFNI_IMSAVE_WARNINGS=NO \
#     FSLOUTPUTTYPE=NIFTI_GZ \
#     MRTRIX_NTHREADS=1 \
#     IS_DOCKER_8395080871=1 \
#     DIPY_HOME=/home/qsiprep/.dipy
# ENV FREESURFER_HOME=/opt/freesurfer \
#     SUBJECTS_DIR=/opt/freesurfer/subjects \
#     FUNCTIONALS_DIR=/opt/freesurfer/sessions \
#     MNI_DIR=/opt/freesurfer/mni \
#     LOCAL_DIR=/opt/freesurfer/local \
#     FSFAST_HOME=/opt/freesurfer/fsfast \
#     MINC_BIN_DIR=/opt/freesurfer/mni/bin \
#     MINC_LIB_DIR=/opt/freesurfer/mni/lib \
#     MNI_DATAPATH=/opt/freesurfer/mni/data \
#     FMRI_ANALYSIS_DIR=/opt/freesurfer/fsfast
# ENV PERL5LIB=$MINC_LIB_DIR/perl5/5.8.5 \
#     MNI_PERL5LIB=$MINC_LIB_DIR/perl5/5.8.5 \
#     PATH=$FREESURFER_HOME/bin:$FSFAST_HOME/bin:$FREESURFER_HOME/tktools:$MINC_BIN_DIR:$PATH
# ENV PATH="/usr/local/miniconda/bin:${ANTSPATH}:${PATH}"

# # Make singularity mount directories
# RUN  mkdir -p /sngl/data \
#   && mkdir /sngl/qsiprep-output \
#   && mkdir /sngl/out \
#   && mkdir /sngl/scratch \
#   && mkdir /sngl/spec \
#   && mkdir /sngl/eddy \
#   && mkdir /sngl/filter \
#   && chmod a+rwx /sngl/*
