FROM ubuntu:18.04
ARG TAG_ANTS

RUN apt update && apt full-upgrade -y && \
  apt install --no-install-recommends -y software-properties-common && \
  add-apt-repository -y ppa:beineri/opt-qt-5.12.8-bionic && \
  add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
  apt install -y --no-install-recommends \
  unzip \
  curl \
  make \
  git \
  libboost-all-dev \
  zlib1g-dev \
  ca-certificates \
  qt512base \
  qt512charts-no-lgpl \
  mesa-common-dev \
  libglu1-mesa-dev \
  gcc-9 \
  g++-9 && \
  apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 \
                    99 \
                    --slave   /usr/bin/cc cc /usr/bin/gcc-9 \
                    --slave   /usr/bin/c++ c++ /usr/bin/g++-9 \
                    --slave   /usr/bin/g++ g++ /usr/bin/g++-9 \
                    --slave   /usr/bin/gcov gcov /usr/bin/gcov-9 \
                    --slave   /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 \
                    --slave   /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 \
                    --slave   /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-9 \
                    --slave   /usr/bin/gcc-nm gcc-nm /usr/bin/gcc-nm-9 \
                    --slave   /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-9

RUN update-alternatives --auto gcc

#Need to use a different shell so the QT ENV script works
SHELL ["/bin/bash", "-c"]
ENV PATH="$PATH:/opt/qt512/bin"

ARG DSI_SHA=8118e168f096c897dcc40f9ecc3ba72b1925cb7d
ARG TIPL_SHA=485a9b140ee4544a1e9c9c084b9d1012ff0b1523

RUN source /opt/qt512/bin/qt512-env.sh \
  && mkdir /opt/dsi-studio \
  && cd /opt/dsi-studio \
  && curl -sSLO https://github.com/frankyeh/DSI-Studio/archive/${DSI_SHA}.zip \
  && unzip ${DSI_SHA}.zip \
  && mv DSI-Studio-${DSI_SHA} src \
  && rm -rf ${DSI_SHA}.zip \
  && curl -sSLO https://github.com/frankyeh/TIPL/archive/${TIPL_SHA}.zip \
  && unzip ${TIPL_SHA}.zip \
  && mv TIPL-${TIPL_SHA} src/TIPL \
  && rm ${TIPL_SHA}.zip \
  && mkdir build && cd build \
  && qmake ../src && make -j 1

ARG ATLAS_SHA=e2e00a8a09cf735c1e6018c258f239586bd77d68

RUN mkdir -p /opt/dsi-studio/dsi_studio_64 \
  && cd /opt/dsi-studio/dsi_studio_64 \
  && curl -sSLO https://github.com/frankyeh/DSI-Studio-atlas/archive/${ATLAS_SHA}.zip \
  && unzip ${ATLAS_SHA}.zip \
  && mv DSI-Studio-atlas-${ATLAS_SHA} atlas \
  && rm ${ATLAS_SHA}.zip \
  && mv ../build/dsi_studio . \
  && rm -rf /opt/dsi-studio/src /opt/dsi-studio/build
